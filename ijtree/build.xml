<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="ijtree" default="core" basedir=".">
    <property name="project" value="ijtree"/>
    <property name="version" value="0.0.1"/>
    <property name="build.dir" value="./bin"/>
    <property name="build.src" value="${build.dir}/src"/>
    <property name="build.dest" value="${build.dir}/classes"/>
    <property name="installdir" value="Z:/MyDocuments/eclipse/owlseditor/lib"/>
    <property name="build.war" value="${build.dir}/war"/>
    <property name="src.java.dir" value="./src"/>
    <property name="javadoc.destdir" value="./javadoc"/>
    <property name="final.name" value="${project}-${version}"/>
    <property name="final.dir" value="./${final.name}/"/>
    <property name="debug" value="on"/>
    <property name="year" value="2004"/>
    <property name="ant.home" value="${ant.home}"/>
    <property name="project.jar" value="${build.dir}/${project}.jar"/>
    <property name="docs.dest" value="./site"/>
    <property name="docs.src" value="./xdocs"/>
    
    <!-- Holds all the files that a full package should contain.-->
    <property name="distribution.contents" value="src/*,build/*,docs/*,xdocs/*,lib/*,bin/${project}.jar"/>

    <!-- =================================================================== -->
    <!-- Build OWL-S Editor and copy it to the Protege plugin dir            -->
    <!-- =================================================================== -->
    <target name="install" depends="jar">
    <echo message="Copying IJTree files to ${installdir}"/>		
    <copy file="${build.dir}/ijtree.jar" todir="${installdir}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Handles all javac compilations                                      -->
    <!-- =================================================================== -->
    <target name="core">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.src}"/>
        <echo message="Compiling in ${src.java.dir} and saving to ${build.dest}"/>
        <javac deprecation="yes"
               srcdir="${src.java.dir}/" 
               destdir="${build.dest}" 
               debug="${debug}">
            <classpath>
                <fileset dir="./lib">
                     <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>
    
    <!-- =================================================================== -->
    <!-- Cleans up the distribution                                          -->
    <!-- =================================================================== -->
    <target name="clean">
        <delete dir="${build.dir}/src"/>
        <delete dir="${build.dir}/classes"/>
        <delete file="${project.jar}"/>
        <delete file="${project.war}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Rebuilds everything                                                 -->
    <!-- Basic target which rebuilds Jetspeed clean and then does a full     -->
    <!-- because there is no second JVM bootup.                              -->
    <!-- =================================================================== -->
    <target name="rebuild" depends="clean,core"/>

    <!-- =================================================================== -->
    <!-- Create Javadoc for everything					     				 -->
    <!-- =================================================================== -->
    <target name="javadoc">
        <mkdir dir="./javadoc"/>
        <javadoc packagenames="*"
                 sourcepath="./src"
                 destdir="{javadoc.destdir}"
                 author="true"
                 version="true"
                 use="true"
                 failonerror="yes">
        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Create the jars         					     -->
    <!-- =================================================================== -->
    <target name="jar" depends="core">
        <echo message="Building jar file..."/>
        <jar destfile="${project.jar}"
             compress="false"
             update="no"
             basedir="${build.dest}"
             includes="org/**">
       </jar>
    </target>

</project>

